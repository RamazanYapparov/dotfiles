{
	"name": "vscode-docker",
	"version": "0.0.19",
	"publisher": "PeterJausovec",
	"displayName": "Docker",
	"description": "Adds syntax highlighting, commands, hover tips, and linting for Dockerfile and docker-compose files.",
	"license": "SEE LICENSE IN LICENSE.md",
	"icon": "images/docker_icon.png",
	"aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
	"galleryBanner": {
		"color": "#1289B9",
		"theme": "dark"
	},
	"categories": [
		"Languages",
		"Linters",
		"Azure"
	],
	"keywords": [
		"docker",
		"compose",
		"container"
	],
	"repository": {
		"url": "https://github.com/microsoft/vscode-docker.git"
	},
	"homepage": "https://github.com/Microsoft/vscode-docker/blob/master/README.md",
	"activationEvents": [
		"onLanguage:dockerfile",
		"onLanguage:yaml",
		"onCommand:vscode-docker.image.build",
		"onCommand:vscode-docker.image.inspect",
		"onCommand:vscode-docker.image.remove",
		"onCommand:vscode-docker.image.push",
		"onCommand:vscode-docker.image.tag",
		"onCommand:vscode-docker.container.start",
		"onCommand:vscode-docker.container.start.interactive",
		"onCommand:vscode-docker.container.start.azurecli",
		"onCommand:vscode-docker.container.stop",
		"onCommand:vscode-docker.container.show-logs",
		"onCommand:vscode-docker.container.open-shell",
		"onCommand:vscode-docker.compose.up",
		"onCommand:vscode-docker.compose.down",
		"onCommand:vscode-docker.configure",
		"onCommand:vscode-docker.createWebApp",
		"onCommand:vscode-docker.debug.configureLaunchJson",
		"onCommand:vscode-docker.system.prune",
		"onCommand:vscode-docker.dockerHubLogout",
		"onView:dockerExplorer"
	],
	"main": "./out/dockerExtension",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"when": "editorLangId == dockerfile",
					"command": "vscode-docker.image.build",
					"group": "docker"
				}
			],
			"explorer/context": [
				{
					"when": "resourceLangId == dockerfile",
					"command": "vscode-docker.image.build",
					"group": "docker"
				}
			],
			"view/title": [
				{
					"command": "dockerExplorer.refreshExplorer",
					"when": "view == dockerExplorer",
					"group": "navigation"
				},
				{
					"command": "vscode-docker.system.prune",
					"when": "view == dockerExplorer",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "vscode-docker.container.start",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.container.start",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.container.start.interactive",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.container.start.interactive",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.image.push",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.image.push",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.image.remove",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.image.remove",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.image.inspect",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.image.inspect",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.image.tag",
					"when": "view == dockerExplorer && viewItem == localImageNode"
				},
				{
					"command": "vscode-docker.image.tag",
					"when": "view == dockerExplorer && viewItem == imagesRootNode"
				},
				{
					"command": "vscode-docker.container.stop",
					"when": "view == dockerExplorer && viewItem == runningLocalContainerNode"
				},
				{
					"command": "vscode-docker.container.stop",
					"when": "view == dockerExplorer && viewItem == containersRootNode"
				},
				{
					"command": "vscode-docker.container.show-logs",
					"when": "view == dockerExplorer && viewItem == runningLocalContainerNode"
				},
				{
					"command": "vscode-docker.container.show-logs",
					"when": "view == dockerExplorer && viewItem == containersRootNode"
				},
				{
					"command": "vscode-docker.container.open-shell",
					"when": "view == dockerExplorer && viewItem == runningLocalContainerNode"
				},
				{
					"command": "vscode-docker.container.open-shell",
					"when": "view == dockerExplorer && viewItem == containersRootNode"
				},
				{
					"command": "vscode-docker.container.remove",
					"when": "view == dockerExplorer && viewItem == stoppedLocalContainerNode"
				},
				{
					"command": "vscode-docker.container.remove",
					"when": "view == dockerExplorer && viewItem == runningLocalContainerNode"
				},
				{
					"command": "vscode-docker.container.remove",
					"when": "view == dockerExplorer && viewItem == containersRootNode"
				},
				{
					"command": "vscode-docker.createWebApp",
					"when": "view == dockerExplorer && viewItem == azureImageTag"
				},
				{
					"command": "vscode-docker.createWebApp",
					"when": "view == dockerExplorer && viewItem == dockerHubImageTag"
				},
				{
					"command": "vscode-docker.dockerHubLogout",
					"when": "view == dockerExplorer && viewItem == dockerHubRootNode"
				}
			]
		},
		"debuggers": [
			{
				"type": "docker",
				"label": "Docker Attach",
				"initialConfigurations": "vscode-docker.debug.configureLaunchJson"
			}
		],
		"languages": [
			{
				"id": "dockerfile",
				"aliases": [
					"Dockerfile"
				],
				"filenamePatterns": [
					"dockerfile*",
					"Dockerfile*"
				]
			}
		],
		"configuration": {
			"type": "object",
			"title": "Docker configuration options",
			"properties": {
				"docker.defaultRegistry": {
					"type": "string",
					"default": "",
					"description": "Default registry to push to, empty string will push to Dockerhub."
				},
				"docker.defaultRegistryPath": {
					"type": "string",
					"default": "",
					"description": "Path within registry to push to."
				},
				"docker.showExplorer": {
					"type": "boolean",
					"default": true,
					"description": "Show or hide the Explorer."
				},
				"docker.explorerRefreshInterval": {
					"type": "number",
					"default": 1000,
					"description": "Explorer refresh interval, default is 1000ms."
				},
				"docker.languageserver.diagnostics.deprecatedMaintainer": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for the deprecated MAINTAINER instruction."
				},
				"docker.languageserver.diagnostics.emptyContinuationLine": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines."
				},
				"docker.languageserver.diagnostics.directiveCasing": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for parser directives that are not written in lowercase."
				},
				"docker.languageserver.diagnostics.instructionCasing": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for instructions that are not written in uppercase."
				},
				"docker.languageserver.diagnostics.instructionCmdMultiple": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions."
				},
				"docker.languageserver.diagnostics.instructionEntrypointMultiple": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions."
				},
				"docker.languageserver.diagnostics.instructionHealthcheckMultiple": {
					"type": "string",
					"default": "warning",
					"enum": [
						"ignore",
						"warning",
						"error"
					],
					"description": "Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions."
				}
			}
		},
		"commands": [
			{
				"command": "vscode-docker.configure",
				"title": "Add docker files to workspace",
				"description": "Add Dockerfile, docker-compose.yml files",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.image.build",
				"title": "Build Image",
				"description": "Build a Docker image from a Dockerfile",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.image.inspect",
				"title": "Inspect Image",
				"description": "Inspect the metadata of a Docker image",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.image.remove",
				"title": "Remove Image",
				"description": "Remove a Docker image",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.image.tag",
				"title": "Tag Image",
				"description": "Tag a Docker image",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.start",
				"title": "Run",
				"description": "Starts a container from an image",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.start.interactive",
				"title": "Run Interactive",
				"description": "Starts a container from an image and runs it interactively",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.start.azurecli",
				"title": "Azure CLI",
				"description": "Starts a container from the Azure CLI image and runs it interactively",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.stop",
				"title": "Stop Container",
				"description": "Stop a running container",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.remove",
				"title": "Remove Container",
				"description": "Remove a stopped container",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.show-logs",
				"title": "Show Logs",
				"description": "Show the logs of a running container",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.container.open-shell",
				"title": "Attach Shell",
				"description": "Open a terminal with an interactive shell for a running container",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.compose.up",
				"title": "Compose Up",
				"description": "Starts a composition of containers",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.compose.down",
				"title": "Compose Down",
				"description": "Stops a composition of containers",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.image.push",
				"title": "Push",
				"description": "Push an image to a registry",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.system.prune",
				"title": "System Prune",
				"description": "Removes unused data",
				"category": "Docker",
				"icon": {
					"light": "images/light/prune.svg",
					"dark": "images/dark/prune.svg"
				}
			},
			{
				"command": "dockerExplorer.refreshExplorer",
				"title": "Refresh",
				"category": "Docker",
				"icon": {
					"light": "images/light/refresh.svg",
					"dark": "images/dark/refresh.svg"
				}
			},
			{
				"command": "vscode-docker.createWebApp",
				"title": "Deploy Image to Azure App Service",
				"category": "Docker"
			},
			{
				"command": "vscode-docker.dockerHubLogout",
				"title": "DockerHub Logout",
				"category": "Docker"
			}
		],
		"views": {
			"explorer": [
				{
					"id": "dockerExplorer",
					"name": "Docker",
					"when": "config.docker.showExplorer == true"
				}
			]
		}
	},
	"engines": {
		"vscode": "^1.17.0"
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"extensionDependencies": [
		"vscode.docker",
		"vscode.yaml",
		"ms-vscode.azure-account"
	],
	"devDependencies": {
		"vscode": "^1.0.0",
		"typescript": "^2.1.5",
		"@types/node": "^8.0.34",
		"@types/keytar": "^4.0.1"
	},
	"dependencies": {
		"dockerfile-language-server-nodejs": "^0.0.9",
		"dockerode": "^2.5.1",
		"vscode-extension-telemetry": "^0.0.6",
		"vscode-languageclient": "3.3.0",
		"azure-arm-containerregistry": "^1.0.0-preview",
		"azure-arm-resource": "^2.0.0-preview",
		"azure-arm-website": "^1.0.0-preview",
		"request-promise": "^4.2.2"
	},
	"__metadata": {
		"id": "0479fc1c-3d67-49f9-b087-fb9069afe48f",
		"publisherId": "bc3f1075-3ced-4395-9b1b-3f0ecaee83be",
		"publisherDisplayName": "Microsoft"
	}
}